name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Huawei Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Frpc
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_HUB_SPACE }}/${{ vars.DOCKER_IMAGE_NAME_FRPC }}:latest
          build-args: |
            FRP_VERSION=${{ vars.FRP_VERSION }}
            SERVER_HOST=${{ secrets.SERVER_HOST }}
            AUTH_TOKEN=${{ secrets.AUTH_TOKEN }}
            REMOTE_SERVER_PORT=${{ secrets.REMOTE_SERVER_PORT }}
            ROOT_DOMAIN_NAME=${{ vars.ROOT_DOMAIN_NAME }}
            FRP_DASHBOARD_ADDR=${{ secrets.FRP_DASHBOARD_ADDR }}
            FRP_DASHBOARD_PORT=${{ secrets.FRP_DASHBOARD_PORT }}
            FRP_DASHBOARD_USERNAME=${{ secrets.FRP_DASHBOARD_USERNAME }}
            FRP_DASHBOARD_PASSWORD=${{ secrets.FRP_DASHBOARD_PASSWORD }}

      - name: Build and push Frps
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_HUB_SPACE }}/${{ vars.DOCKER_IMAGE_NAME_FRPS }}:latest
          build-args: |
            FRP_VERSION=${{ vars.FRP_VERSION }}
            CONF_FILE_NAME=frps
            SERVER_HOST=${{ secrets.SERVER_HOST }}
            AUTH_TOKEN=${{ secrets.AUTH_TOKEN }}
            REMOTE_HTTP_PORT=${{ secrets.REMOTE_HTTP_PORT }}
            REMOTE_HTTPS_PORT=${{ secrets.REMOTE_HTTPS_PORT }}
            ROOT_DOMAIN_NAME=${{ vars.ROOT_DOMAIN_NAME }}
            FRP_DASHBOARD_ADDR=${{ secrets.FRP_DASHBOARD_ADDR }}
            FRP_DASHBOARD_USERNAME=${{ secrets.FRP_DASHBOARD_USERNAME }}
            FRP_DASHBOARD_PASSWORD=${{ secrets.FRP_DASHBOARD_PASSWORD }}

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo -n "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin ${{ secrets.DOCKER_REGISTRY }}
            docker pull ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_HUB_SPACE }}/${{ vars.DOCKER_IMAGE_NAME_FRPS }}

            cd /home/ubuntu/freedom
            docker compose up -d cloud-server-frps
      -
        name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST_202 }}
          username: ${{ secrets.SSH_USERNAME_202 }}
          key: ${{ secrets.SSH_KEY_202 }}
          port: ${{ secrets.SSH_PORT_202 }}
          script: |
            echo -n "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin ${{ secrets.DOCKER_REGISTRY }}
            docker pull ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_HUB_SPACE }}/${{ vars.DOCKER_IMAGE_NAME_FRPC }}

            if [[ $(docker ps -a | grep ${{ vars.DOCKER_CONTAINER_NAME_FRPC }}$) ]]; then
              docker rm -f ${{ vars.DOCKER_CONTAINER_NAME_FRPC }};
            fi
            docker run -dit --restart always --name ${{ vars.DOCKER_CONTAINER_NAME_FRPC }} \
              --network host --restart always \
              ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_HUB_SPACE }}/${{ vars.DOCKER_IMAGE_NAME_FRPC }}
